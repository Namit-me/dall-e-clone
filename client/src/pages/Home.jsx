// eslint-disable-next-line no-unused-vars
import React, {useState,useEffect} from 'react'
import { Loader,Card,FormField } from '../components'

{/*this component conditionally renders a list of "card" components based on the presence and length of the "data" prop. If "data" exists and has elements, it renders the cards. Otherwise, it displays a styled heading with the provided "title". */}
const RenderCards = ({ data, title }) => {
  if(data?.length > 0){
    return data.map((post) => < Card key={post._id} {...post} />)
  } 

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'> { title }</h2>
  )
}
const Home = () => {

  const [loading, setloading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  
  const [searchText, setSearchText] = useState('');
  const [SearchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setsearchTimeout] = useState(null);
  

  useEffect(()=>{
    const fetchPosts = async()=> {
      setloading(true);

      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'content-Type' : 'application/json',
          },
        })
        if(response.ok){
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
        
      } catch (error) {
        alert(error)
      } finally {
        setloading(false);
      }
    }

    fetchPosts();
  },[]);

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    
    setSearchText(e.target.value);

    setsearchTimeout(
      setTimeout(()=>{
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
  
        setSearchedResults(searchResults);
      },500)

    );
  }

  return (
    
      <section className='mx-auto max-w-7xl'>
        <div>
          <h1 className='font-extrabold text-[#222328] text-[32px]'> The Community Showcase</h1>
          <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'> Browse through a collection of imaginative and visually stunning images generated by DALL-E AI.</p>
        </div>

        <div className='mt-16'>
          <FormField
            labelName="Search posts"
            type="type"
            name="text"
            placeholder="search posts"
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>

        <div className='mt-10'>
          {loading? (
            <div className='flex items-center justify-center'>
              <Loader/>
            </div>
          ) : (
            <>
              {searchText && (
                <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                  showing results for <span className='text-[#222328]'>{searchText}</span>
                </h2>
              )}

              <div className='grid gap-3 lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-1'>
                {searchText ?(
                  <RenderCards
                    data={[SearchedResults]}
                    title='No search results found'
                  />
                ):(
                  <RenderCards 
                    data={allPosts}
                    title='no posts found'
                   /> 
                )}
                
              </div>

            </>
          )}

        </div>
      </section>
  )
}

export default Home
